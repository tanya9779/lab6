'''
Задача C
++++++++

В прихожей в ряд стоит N тапочек, которые бывают разных размеров, а также левыми и правыми. Гость выбирает два тапочка,
удовлетворяющих следующим условиям:

- выбранные тапочки должны быть одного размера;
- из выбранных тапочков левый тапочек должен стоять левее правого;
- если можно выбрать несколько пар тапочек, удовлетворяющих первым двум условиям, то выбирается два тапочка с наименьшим
  расстоянием между ними.

  В первой строке входны данных записано число тапочков N. Во второй строке записаны размеры тапочков в порядке слева
  направо, при этом левые тапочки условно обозначаются отрицательными числами (то есть -s обозначает левый тапочек, а s
  обозначает правый тапочек размера s).

  Выведите одно число: минимальное расстояние между двумя тапочками одного размера таких, что левый тапочек стоит левее
  правого. Если таких пар тапочек нет, то выведите одно число 0.

  +----------------------+-------+
  | Ввод                 | Вывод |
  +======================+=======+
  | 6                    | 2     |
  +----------------------+-------+
  | -40 41 -42 -41 42 40 |       |
  +----------------------+-------+
'''

in_f=open('input.txt')
out_f=open('output.txt','w')
s=in_f.readline().rstrip()
N=int(s)
s=in_f.readline().rstrip()
A = list(map(int, s.split()))

min_n=len(A)+1 # это будем уменьшать
for i in range(N-1):
    if A[i]<0: # т.к. левый должен стоять левее правого
        for j in range(i+ 1,N):
            if A[j]==-A[i] and j-i<min_n:
                min_n=j-i

if min_n==len(A)+1: # нет пары чтобы слева левый и размер совпадает
    min_n=0
print(min_n,file=out_f)
in_f.close()
out_f.close()
